
## get non - size 0 
find . ! -size 0 

## get the total disk usage from a list of files
cat ~/BQC19_r3/BQC19/anonymisation/cram_filenames.txt | xargs -d \\n du -ch


Location of R tools:
/cvmfs/soft.mugqic/CentOS6/software/mugqic_tools/mugqic_tools-2.6.0/R-tools

module load mugqic/R_Bioconductor/4.1.0_3.13

#!/bin/bash
#SBATCH --job-name=meth
#SBATCH --account=rrg-bourqueg-ad
#SBATCH --time=7:00:00
#SBATCH --mem=100G
#SBATCH --mail-type=ALL
#SBATCH --mail-user=danielle.perley@mcgill.ca
#SBATCH -n 1
#SBATCH --output=meth_out_%j.txt


Or 
sbatch --job-name=meth_analysis --cpus-per-task=8 --account=rrg-bourqueg-ad --time=7:00:00 --mem-per-cpu=14G --mail-type=ALL --mail-user=danielle.perley@mcgill.ca -n 1 --output=meth_out_%j.txt ./Methylation_analysis_walt.R Methylation_analysis_no_amb_reads | grep [0-9] | cut -f4

## to switch login nodes
[dsperley@beluga2 ~]$ ssh beluga5


## get job efficency stats

[dsperley@beluga2 Methylation_analysis]$ seff 21446876
Job ID: 21446876
Cluster: beluga
User/Group: dsperley/dsperley
State: FAILED (exit code 1)
Cores: 1
CPU Utilized: 01:44:07
CPU Efficiency: 95.78% of 01:48:42 core-walltime
Job Wall-clock time: 01:48:42
Memory Utilized: 6.31 GB
Memory Efficiency: 1.26% of 500.00 GB


## how to add ssh-keys (https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)

Generating a new SSH key
Open Terminal.

Paste the text below, substituting in your GitHub email address.

$ ssh-keygen -t ed25519 -C "your_email@example.com"
Note: If you are using a legacy system that doesn't support the Ed25519 algorithm, use:

$ ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
This creates a new ssh key, using the provided email as a label.
> Generating public/private ed25519 key pair.
When you're prompted to "Enter a file in which to save the key," press Enter. This accepts the default file location.

> Enter a file in which to save the key (/Users/you/.ssh/id_ed25519): [Press enter]
At the prompt, type a secure passphrase. For more information, see "Working with SSH key passphrases."

> Enter passphrase (empty for no passphrase): [Type a passphrase]
> Enter same passphrase again: [Type passphrase again]


Adding your SSH key to the ssh-agent
Before adding a new SSH key to the ssh-agent to manage your keys, you should have checked for existing SSH keys and generated a new SSH key. When adding your SSH key to the agent, use the default macOS ssh-add command, and not an application installed by macports, homebrew, or some other external source.

Start the ssh-agent in the background.

$ eval "$(ssh-agent -s)"
> Agent pid 59566
Depending on your environment, you may need to use a different command. For example, you may need to use root access by running sudo -s -H before starting the ssh-agent, or you may need to use exec ssh-agent bash or exec ssh-agent zsh to run the ssh-agent.

If you're using macOS Sierra 10.12.2 or later, you will need to modify your ~/.ssh/config file to automatically load keys into the ssh-agent and store passphrases in your keychain.

First, check to see if your ~/.ssh/config file exists in the default location.

$ open ~/.ssh/config
> The file /Users/you/.ssh/config does not exist.
If the file doesn't exist, create the file.

$ touch ~/.ssh/config (permissions should be 644)
Open your ~/.ssh/config file, then modify the file to contain the following lines. If your SSH key file has a different name or path than the example code, modify the filename or path to match your current setup.

Host *
  AddKeysToAgent yes
  UseKeychain yes
  IdentityFile ~/.ssh/id_ed25519
Note: If you chose not to add a passphrase to your key, you should omit the UseKeychain line.

Note: If you see an error like this

/Users/USER/.ssh/config: line 16: Bad configuration option: usekeychain
add an additional config line to your Host * section:

Host *
  IgnoreUnknown UseKeychain
Add your SSH private key to the ssh-agent and store your passphrase in the keychain. If you created your key with a different name, or if you are adding an existing key that has a different name, replace id_ed25519 in the command with the name of your private key file.

$ ssh-add -K ~/.ssh/id_ed25519
Note: The -K option is Apple's standard version of ssh-add, which stores the passphrase in your keychain for you when you add an ssh key to the ssh-agent. If you chose not to add a passphrase to your key, run the command without the -K option.

If you don't have Apple's standard version installed, you may receive an error. For more information on resolving this error, see "Error: ssh-add: illegal option -- K."

Add the SSH key to your account on GitHub. For more information, see "Adding a new SSH key to your GitHub account."

